<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Y0w1rLbafwC+te2gi4PMtgAAAABJRU5ErkJggg==
</value>
  </data>
</root>